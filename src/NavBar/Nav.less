@import "../_CommonStyles/_Units.less";

:host {
    display: block;
    width: 100%;
    height: var(--height);
    background-color: var(--background-colour);
    transition: transform .5s;
    transform-origin: top;
    z-index: 1000;
    
    &::part(title-sticky) {
        transform: scale(.8);
    }

    @media only screen and (min-width: @widthMobile)  {
    &::part(items-sticky) {
        //transform: scale(.8, 1);
    }
}
}

nav {
    position: fixed;
    width: 100vw;
    // TODO: How to get menu to shrink?
    //height: var(--height);
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    align-items: center;
    justify-content: var(--justify, flex-start);
    padding-left: var(--padding-left);
    padding-right: var(--padding-right);
    background: var(--background, var(--light));
    transition: transform .5s;
    transform-origin: top;

    @media screen and (max-width: @widthMobile) {
        justify-content: flex-start;
        padding-left: initial;
        padding-right: initial;
        flex-direction: column;
        overflow-y: auto;

        div {
            flex-grow: 0.1;
        }
    }

    &.sticky {
        //transform: scaleY(0.8);
    }

    &.open {
        overflow: visible;
        .items {
            max-height: 100vh;
        }
    }

    &.open {
        .items {

            &.left,
            &.right {
                flex: 1;
            }

            @media screen and (max-width: @widthMobile) {
                max-height: calc(100 * var(--vh));
            }
        }
    }

    .title {
        display: flex;
        flex-direction: row;
        flex-direction: row;
        flex-grow: var(--title-grow, 1);
        margin-left: var(--title-margin-left, 0);
        margin-right: var(--title-margin-right, 0);
        align-items: center;
        padding-top: .3125rem;
        padding-bottom: .3125rem;
        margin-right: 1rem;
        font-size: 1.25rem;
        text-decoration: none;
        white-space: nowrap;
        background: var(--title-background, var(--light));
        transition: transform .5s;
        transform-origin: top;

        * {
            display: inline-block;
        }

        @media screen and (max-width: @widthMobile) {
            flex-grow: 0;
            margin-right: initial;
        }
    }

    .items {
        display: flex;
        overflow: visible;
        align-items: baseline;
        background: var(--items-background, var(--light));
        border-radius: 10px;
        transition: transform .5s;
        transform-origin: top;

        &.left {
            order: -1;
        }

        &.right {
            order: 1;
        }

        @media screen and (max-width: @widthMobile) {
            max-height: 0;
            transition: max-height 1.5s;
            flex-direction: column;
            overflow-y: visible;
            order: 1 !important;
            width: 100%;
        }
    

    ::slotted(*) {
        display: block;
        flex-basis: 0;
        flex-shrink: 1;
        padding-left: .75rem;
        padding-right: .75rem;
    }
}

    .addon {

        ::slotted(*) {
            display: flex;
        }
    }
}

#toggle {
    display: none;
    top: 0;
    position: fixed;
    width: 32px;
    height: 32px;
    cursor: pointer;
    color: rgba(0, 0, 0, .55);
    border-color: rgba(0, 0, 0, .1);
    padding: .25rem .75rem;
    font-size: 1.25rem;
    line-height: 1;
    background-color: transparent;
    border: 1px solid transparent;
    border-radius: .25rem;
    transition: box-shadow .15s ease-in-out;

    @media screen and (max-width: @widthMobile) {
        display: inline-block;

        +.items {
            position: relative;


            &.open {
                +.items {
                    max-height: calc(100 * var(--vh));
                }
            }
        }
    }






    @media screen and (max-width: @widthMobile) {
        display: inline-block;
    }


    span {
        background-color: currentColor;
        display: block;
        height: 2px;
        left: calc(50% - 8px);
        position: absolute;
        transform-origin: center;
        transition-duration: 86ms;
        transition-property: background-color, opacity, transform;
        transition-timing-function: ease-out;
        width: 16px;
    }

    span:nth-child(1) {
        top: calc(50% - 5.5px);
    }

    span:nth-child(2) {
        top: calc(50% - .5px);
    }

    span:nth-child(3) {
        top: calc(50% + 4px);
    }
    
    &.open {
        span:nth-child(1) {
            transform: translateY(5px) rotate(45deg);
        }

        span:nth-child(2) {
            opacity: 0;
        }

        span:nth-child(3) {
            transform: translateY(-5px) rotate(-45deg);
        }
    }
}